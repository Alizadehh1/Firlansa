@model Tuple<List<Product>, int[], int[], int[], SelectList, List<Adress>>
@{
    ViewData["Title"] = "Basket";
}

<div class="page-content pt-7 pb-10">
    @if (Model.Item2 != null)
    {
        if (Model.Item2.Length != 0)
        {
            <div class="step-by pr-4 pl-4">
                <h3 class="title title-simple title-step active"><a href="cart.html">1. Shopping Cart</a></h3>
                <h3 class="title title-simple title-step"><a href="checkout.html">2. Checkout</a></h3>
                <h3 class="title title-simple title-step"><a href="order.html">3. Order Complete</a></h3>
            </div>
        }
    }
    <div class="container mt-7 mb-2">
        <div class="row">
            <div class="col-lg-@(Model.Item2?.Length == 0 || Model.Item2 == null ? "12" : "8") col-md-12 pr-lg-4">
                <div class="emptyBasketContainer">
                    @if (Model.Item2?.Length == 0 || Model.Item2 == null)
                    {
                        <div class="d-flex flex-column justify-content-center align-items-center">
                            <i class="emptyBasket fa-solid fa-cart-shopping"></i>
                            <h1 class="emptyBasketText">Səbətiniz Boşdur</h1>
                        </div>
                    }
                </div>
                @if (Model.Item2 != null)
                {
                    if (Model.Item2.Length != 0)
                    {
                        //int index = 0;
                        <table class="shop-table cart-table shipping">
                            <thead>
                                <tr>
                                    <th><span>Məhsul</span></th>
                                    <th>Ad</th>
                                    <th>Rəng</th>
                                    <th>Ölçü</th>
                                    <th>Qiymət</th>
                                    <th style="text-align:center;">Ədəd</th>
                                    <th>Yekun</th>
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Model.Item1.Count; i++)
                                {
                                    <tr id="entityTr" data-id="@Model.Item1[i].Id" data-color-id="@Model.Item2[i]" data-size-id="@Model.Item3[i]" data-specification="@Model.Item1[i].Id-@Model.Item2[i]-@Model.Item3[i]" data-entity-id="@Model.Item1[i].Id" data-price="@Model.Item1[i].Price" data-quantity="@Model.Item4[i]">
                                        <td class="product-thumbnail">
                                            <figure>
                                                <a asp-action="details" asp-controller="shop" asp-route-id="@Model.Item1[i].Id">
                                                    <img src="~/uploads/images/@Model.Item1[i].Images.FirstOrDefault().ImagePath" width="100" height="100"
                                                         alt="@Model.Item1[i].Name">
                                                </a>
                                            </figure>
                                        </td>
                                        <td class="product-name">
                                            <div class="product-name-section">
                                                <a asp-action="details" asp-controller="shop" asp-route-id="@Model.Item1[i].Id">
                                                    @Model.Item1[i].Name
                                                </a>
                                            </div>
                                        </td>
                                        <td class="product-name">
                                            <div class="product-name-section">
                                                <span>@Model.Item1[i].Specifications.FirstOrDefault(s => s.ColorId == Model.Item2[i]).Color.Name</span>
                                            </div>
                                        </td>

                                        <td class="product-name">
                                            <div class="product-name-section">
                                                <span>@Model.Item1[i].Specifications.FirstOrDefault(s => s.SizeId == Model.Item3[i]).Size.Name</span>
                                            </div>
                                        </td>

                                        <td class="product-subtotal">
                                            <span class="amount">@Model.Item1[i].Price₼</span>
                                        <td class="product-quantity">
                                            <div class="input-group">
                                                <button class="quantity-minus d-icon-minus" onclick="minusQuantity(event)"></button>
                                                <input type="number" value="@Model.Item4[i]" class="quantity1 form-control d-flex justify-content-center align-items-center" />
                                                <button class=" quantity-plus d-icon-plus" onclick="plusQuantity(event)"></button>
                                            </div>
                                        </td>
                                        <td class="product-price">
                                            <span class="amount">@(Model.Item1[i].Price * Model.Item4[i])₼</span>
                                        </td>
                                        <td class="product-close">
                                            <a onclick="removeEntity(@Model.Item1[i].Id,@Model.Item2[i],@Model.Item3[i],@Model.Item4[i])" class="product-remove" style="cursor:pointer;" title="Məhsulu silin">
                                                <i class="fas fa-times"></i>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                }
                <div class="cart-actions mb-6 pt-4">
                    <a asp-action="index" class="btn btn-dark btn-md btn-rounded btn-icon-left mr-4 mb-4"><i class="d-icon-arrow-left"></i>Alış-Verİşə davam et</a>
                    <button type="submit" class="btn btn-outline btn-dark btn-md btn-rounded btn-disabled">Update Cart</button>
                </div>
            </div>
            @if (Model.Item2 != null)
            {
                if (Model.Item2.Length != 0)
                {

                    <aside class="col-lg-4 sticky-sidebar-wrapper">
                        <div class="sticky-sidebar" data-sticky-options="{'bottom': 20}">
                            <div id="placingOrder" class="summary mb-4">
                                <h3 class="summary-title text-left">Səbət Ümumi</h3>
                                <table class="shipping">
                                    <tr class="summary-subtotal">
                                        <td>
                                            <h4 class="summary-subtitle">Ümumi qiymət</h4>
                                        </td>
                                        <td>
                                            <p class="summary-subtotal-price">0₼</p>
                                        </td>
                                    </tr>
                                    <tr class="sumnary-shipping shipping-row-last">
                                        <td colspan="2">
                                            <h4 class="summary-subtitle">Çatdırılma hesablanması</h4>
                                        </td>
                                    </tr>
                                </table>
                                <div class="shipping-address">
                                    <label><strong>Ölkə</strong> daxili çatdırılma mövcuddur.</label>
                                    <div style="margin-bottom:15px;">
                                        <select onchange="setShippingPrice()" name="districts" class="form-control select2" asp-items="Model.Item5">
                                            <option selected disabled>---İnzibati ərazini seçin---</option>
                                        </select>
                                    </div>
                                    <input id="locationInput" type="text" required class="form-control" name="code" placeholder="Çatdırılma ünvanı*" />
                                    <input id="mobileInput" type="number" class="form-control" name="code" placeholder="Əlaqə nömrəsi*" />
                                </div>
                                <table class="total">
                                    <tr class="summary-subtotal">
                                        <td>
                                            <h4 class="summary-subtitle">Çatdırılma ilə Cəmi</h4>
                                        </td>
                                        <td>
                                            <p class="summary-total-price ls-s">0</p>
                                        </td>
                                    </tr>
                                </table>
                                <button id="placeOrderBtn" onclick="placeOrder()" class="btn btn-dark btn-rounded btn-checkout">Sifarişi tamamla</button>
                            </div>
                        </div>
                    </aside>
                }
            }
        </div>
    </div>
</div>
@section css{
    <style>
        .select2-container--default .select2-selection--single .select2-selection__rendered {
            background-color: unset;
        }

        .selection > .select2-selection.select2-selection--single {
            display: block;
            width: 100%;
            height: calc(1.5em + .75rem + 2px);
            padding: 0;
            font-size: 1rem;
            font-weight: 400;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: .25rem;
            transition: border-color .15s ease-in-out,box-shadow .15s ease-in-out;
            font-size: 16px;
            border-radius: 2px;
            border: 1px solid #ccc;
        }

        .select2-container--default .select2-selection--single {
            border: none;
        }

            .select2-container--default .select2-selection--single .select2-selection__rendered {
                padding: .375rem .75rem;
            }

        .select2-selection__arrow {
            height: 35px !important;
            top: 1px !important;
            right: 3px !important;
        }

        th.table-row-select,
        td.table-row-select {
            width: 50px;
            min-width: 50px;
            max-width: 50px;
            text-align: center;
        }
    </style>
    <link href="~/libs/select2/css/select2.min.css" rel="stylesheet" />
    <link href="~/libs/toastr.js/toastr.css" rel="stylesheet" />
}
@section js{
    <script src="~/libs/toastr.js/toastr.min.js"></script>
    <script src="~/admin/files/assets/js/customize.js"></script>
    <script>
        function showCardCount() {
            let items = readFromBasket();
            $('span.cart-count').html(items.length - 1);
        }
        function checkCart() {
            let items = readFromBasket();
            var divContainer = $('<div>', {
                class: 'd-flex flex-column justify-content-center align-items-center'
            });
            var iTag = $('<i>', {
                class: 'emptyBasket fa-solid fa-cart-shopping'
            });
            var h1Tag = $('<h1>').text("Səbətiniz Boşdur").addClass("emptyBasketText");
            let divTag = $('div.emptyBasketContainer');

            $('div.step-by').remove();
            if (items.length <= 1) {
                $('table.shipping').remove();
                $('aside.sticky-sidebar-wrapper').remove();
                iTag.appendTo(divContainer);
                h1Tag.appendTo(divContainer);
                divContainer.appendTo(divTag);
                $('div.emptyBasketContainer').parent().removeClass("col-lg-8");
                $('div.emptyBasketContainer').parent().addClass("col-lg-12");
            }
        }
        function setTotalPrice() {
            let items = document.querySelectorAll('td.product-price span.amount');
            let totalPrice = 0;
            for (var i = 0; i < items.length; i++) {
                totalPrice = totalPrice + parseInt(items[i].textContent);
            }
            $('p.summary-subtotal-price').html(`${totalPrice}₼`);
            $('p.summary-total-price').html(`${totalPrice}₼`);
        }
        setTotalPrice();
        function removeEntity(entityId, entityColor, entitySize ,entityQty) {
            let items = readFromBasket();
            let colors = readFromBasketColor();
            let sizes = readFromBasketSize();
            let colorsAndSizes = readFromBasketColorAndSize();
            let qtys = readFromBasketQty();
            let id = entityId.toString();
            const index = items.indexOf(id);
            if (index > -1) {
                items.splice(index, 1);
                colors.splice(index, 1);
                sizes.splice(index, 1);
                colorsAndSizes.splice(index, 1);
                qtys.splice(index, 1);

            }
            $.cookie('cards', items.toString(), { expires: 7, path: '/' });
            $.cookie('colors', colors.toString(), { expires: 7, path: '/' });
            $.cookie('sizes', sizes.toString(), { expires: 7, path: '/' });
            $.cookie('qtys', qtys.toString(), { expires: 7, path: '/' });
            $.cookie('colorAndSizes', colorsAndSizes.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Successfully Deleted", response.message)
                    $(`tr[data-specification=${entityId}-${entityColor}-${entitySize}]`).remove();
                    $(`div[data-specification=${entityId}-${entityColor}-${entitySize}]`).remove();
                    showCardCount();
                    setTotalPrice();
                    checkCart();
                },
                error: function (response) {
                    toastr["error"]("Unsuccessfully", "Data has not been deleted")
                }
            })
        }
        function plusQuantity(e) {
            e.preventDefault();
            let row = $(e.currentTarget).closest('tr')
            let data = $(row).data();
            let quantity = $(row).find('input.quantity1').val();
            if (!isNaN(quantity)) {
                quantity++;
                $(row).data('quantity', quantity);
            }
            $(row).find('input.quantity1').val(quantity);
            $(row).find('td.product-price .amount').html(`${(data.price * quantity)}₼`);
            setTotalPrice();
        }
        function minusQuantity(e) {
            e.preventDefault();
            let row = $(e.currentTarget).closest('tr')
            let data = $(row).data();
            let quantity = $(row).find('input.quantity1').val();
            if (quantity == 1) {
                return
            }
            if (!isNaN(quantity)) {
                quantity--
                $(row).data('quantity', quantity);

            }
            $(row).find('input.quantity1').val(quantity);
            $(row).find('td.product-price .amount').html(`${(data.price * quantity)}₼`);
            setTotalPrice();
        }
        function setShippingPrice() {
            const selectedDistrictName = $("span.select2-selection__rendered").attr("title");
            const options = $('select[name="districts"] option');
            for (var i = 0; i < options.length; i++) {
                if ($(options[i]).html() == selectedDistrictName) {
                    var addressId = $(options[i]).val();
                }
            }

            @foreach (var address in Model.Item6)
            {
                <text>
                    if (@address.Id == addressId) {
                        var shippingPrice = @address.ShippingPrice;
                    }
                </text>
            }
            let items = document.querySelectorAll('td.product-price span.amount');
            let totalPrice = 0;
            for (var i = 0; i < items.length; i++) {
                totalPrice = totalPrice + parseInt(items[i].textContent);
            }
            $('p.summary-total-price').html(`${totalPrice + shippingPrice}₼`);
            console.log(shippingPrice);
        }
        async function placeOrder() {
            const btn = $('#placeOrderBtn');

            $(btn).attr('disable', 'disabled');

            let items = document.querySelectorAll('#entityTr');
            let productIds = [];
            let quantity = [];
            let colorIds = [];
            let sizeIds = [];
            for (var i = 0; i < items.length; i++) {
                let data = $(items[i]).data();
                productIds.push(data.id);
                colorIds.push(data.colorId);
                sizeIds.push(data.sizeId);
                quantity.push(data.quantity);
            }
            let itemsIds = readFromBasket();
            let colors = readFromBasketColor();
            let sizes = readFromBasketSize();
            let colorsAndSizes = readFromBasketColorAndSize();
            let qtys = readFromBasketQty();

            //itemsIds.splice(0, itemsIds.length);
            //colors.splice(0, colors.length);
            //sizes.splice(0, sizes.length);
            //colorsAndSizes.splice(0, colorsAndSizes.length);
            //qtys.splice(0, qtys.length);

            const location = $('#locationInput').val();
            const phoneNumber = $('#mobileInput').val();
            const selectedDistrictName = $("span.select2-selection__rendered").attr("title");
            const options = $('select[name="districts"] option');
            for (var i = 0; i < options.length; i++) {
                if ($(options[i]).html() == selectedDistrictName) {
                    var addressId = $(options[i]).val();
                }
            }

            @foreach (var address in Model.Item6)
            {
                <text>
                    if (@address.Id == addressId) {
                        var shippingPrice = @address.ShippingPrice;
                    }
                </text>
            }
            console.log(shippingPrice);
            $.cookie('cards', itemsIds.toString(), { expires: 7, path: '/' });
            $.cookie('colors', colors.toString(), { expires: 7, path: '/' });
            $.cookie('sizes', sizes.toString(), { expires: 7, path: '/' });
            $.cookie('qtys', qtys.toString(), { expires: 7, path: '/' });
            $.cookie('colorAndSizes', colorsAndSizes.toString(), { expires: 7, path: '/' });





            $.ajax({
                url: "@Url.Action("PlaceOrder")",
                data: {
                    productIds: productIds.toString(),
                    quantities: quantity.toString(),
                    colorIds: colorIds.toString(),
                    sizeIds: sizeIds.toString(),
                    location: location,
                    phoneNumber: phoneNumber,
                    addressId: addressId
                },
                success: async function (response) {
                    //toastr.success("Ugur1", response.message);
                    var id = parseInt(response.message)
                    let routeUrl = `@Url.Action("CompleteOrder")/${id}`;
                    let approveUrl = `https://localhost:44379${routeUrl}`;

                    var myHeaders = new Headers();
                    myHeaders.append("Content-Type", "application/json");
                    myHeaders.append("Authorization", "@ViewBag.SecretKey");
                    var rawCreateOrder = JSON.stringify({
                        "body": {
                            "amount": 1.2,
                            "currencyType": "AZN",
                            "description": "Example",
                            "language": "AZ",
                            "approveURL": approveUrl,
                            "cancelURL": "https://localhost:44379",
                            "declineURL": "https://localhost:44379"
                        },
                        "merchant": "@ViewBag.Merchant"
                    });

                    var requestOptions = {
                        method: 'POST',
                        headers: myHeaders,
                        body: rawCreateOrder,
                        redirect: 'follow'
                    };
                    const responseApi = await fetch("https://api.payriff.com/api/v2/createOrder", requestOptions);
                    const result = await responseApi.json();
                    var orderId = result.payload.orderId;
                    let sessionId = result.payload.sessionId;
                    console.log(orderId);
                    console.log(sessionId);
                    $.ajax({
                        url: "@Url.Action("SetOrderAndSessionId")",
                        data: {
                            id: id,
                            orderId: orderId,
                            sessionId: sessionId
                        },
                        success: function (response) {
                            toastr.success("Ugur", response.message);
                        },
                        error: function (response) {
                            toastr.error(response.message, 'Error!');
                        }
                    })
                    console.log(approveUrl)
                    window.location.replace(result.payload.paymentUrl);
                },
                error: function (response) {
                    $(btn).removeAttr('disable');
                    toastr.error(response.message, 'Error!');
                }
            })
        }
    </script>
    <script src="~/libs/select2/js/select2.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.select2').select2();
        });
    </script>
}
