@model HomeViewModel
@{
    int? userId = Convert.ToInt32(User.GetUserId());
    if (userId == null)
        userId = 0;
}
<div class="page-content">
    @if (Model.Sliders.Count > 0)
    {
        <section class="intro-section">
            <div class="owl-carousel owl-theme row owl-dot-inner owl-dot-white intro-slider animation-slider cols-1 gutter-no"
                 data-owl-options="{
                        'nav': false,
                        'dots': true,
                        'loop': false,
                        'items': 1,
                        'autoplay': false,
                        'autoplayTimeout': 8000
                    }">
                @foreach (var item in Model.Sliders)
                {
                    <div class="banner banner-fixed intro-slide" style="background-color: #dddee0;">
                        <figure>
                            <img src="~/uploads/images/@item.ImagePath" alt="intro-banner" width="1903"
                                 height="630" style="background-color: #d8d9d9;" />
                        </figure>
                    </div>
                }
            </div>
        </section>
    }
    @if (Model.SaleProducts.Count > 0)
    {
        <section class="product-wrapper container appear-animate mt-6 mt-md-10 pt-4 pb-8" data-animation-options="{
                    'delay': '.3s'
                }">
            <h2 class="title title-center mb-5">@HomePage.Products_on_sale</h2>
            <div class="owl-carousel owl-theme row owl-nav-full cols-2 cols-md-3 cols-lg-4" data-owl-options="{
                        'items': @Model.SaleProducts.Count,
                        'nav': false,
                        'loop': false,
                        'dots': true,
                        'margin': 20,
                        'responsive': {
                            '0': {
                                'items': 2
                            },
                            '768': {
                                'items': 3
                            },
                            '992': {
                                'items': 4,
                                'dots': false,
                                'nav': true
                            }
                        }
                    }">
                @foreach (var saleProduct in Model.SaleProducts)
                {
                    string imagePath = saleProduct.Images.FirstOrDefault().ImagePath;
                    <div class="product text-center">
                        <figure class="product-media">
                            <a asp-action="details" asp-controller="shop" asp-route-slug="@saleProduct.Slug">
                                <img src="~/uploads/images/@imagePath" alt="@saleProduct.Name"
                                     width="280" height="315" style="background-color: #f2f3f5;" />
                            </a>
                            <div class="product-label-group">
                                <span class="product-label label-sale">@(Convert.ToInt32(100 - (saleProduct.Price * 100 / saleProduct.OldPrice)))% @HomePage.discount</span>
                            </div>
                            <div class="product-action-vertical">
                                <button style="cursor:pointer;" onclick="addToWishlist(event,@saleProduct.Id)" class="btn-product-icon btn-wishlist" title="Add to wishlist">
                                    <i class="d-icon-heart"></i>
                                </button>
                            </div>
                            <div class="product-action">
                                <a asp-controller="shop" asp-action="quickview" asp-route-slug="@saleProduct.Slug" class="btn-product btn-quickview" title="Quick View">@ShopPage.Quickview</a>
                            </div>
                        </figure>
                        <div class="product-details">
                            <div class="product-cat">
                                <a asp-action="details" asp-controller="shop" asp-route-slug="@saleProduct.Slug">@saleProduct.Category.Name</a>
                            </div>
                            <h3 class="product-name">
                                <a asp-action="details" asp-controller="shop" asp-route-slug="@saleProduct.Slug">@saleProduct.Name</a>
                            </h3>
                            <div class="product-price">
                                <ins class="new-price">@saleProduct.Price&#8380;</ins><del class="old-price">@(saleProduct.OldPrice != null ? saleProduct.OldPrice + "₼" : null)</del>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    }


    <section class="product-wrapper mt-6 mt-md-10 pt-4 mb-10 pb-2 container appear-animate" data-animation-options="{
                    'delay': '.6s'
                }">
        @if (Model.LastestProducts.Count > 0)
        {
            <h2 class="title title-center">@HomePage.New_products</h2>
            <div class="owl-carousel owl-theme row cols-2 cols-md-3 cols-lg-4 cols-xl-5" data-owl-options="{
                        'items': @Model.LastestProducts.Count,
                        'nav': false,
                        'loop': false,
                        'dots': true,
                        'margin': 20,
                        'responsive': {
                            '0': {
                                'items': 2
                            },
                            '768': {
                                'items': 3
                            },
                            '992': {
                                'items': 4
                            },
                            '1200': {
                                'items': @Model.LastestProducts.Count,
                                'dots': false,
                                'nav': true
                            }
                        }
                    }">
                @foreach (var product in Model.LastestProducts)
                {
                    string imagePath = product.Images.FirstOrDefault().ImagePath;
                    <div class="product text-center">
                        <figure class="product-media">
                            <a asp-action="details" asp-controller="shop" asp-route-slug="@product.Slug">
                                <img src="~/uploads/images/@imagePath" alt="@product.Name"
                                     width="220" height="245" style="background-color: #f2f3f5;" />
                            </a>
                            <div class="product-label-group">
                                <label class="product-label label-new">@HomePage.New</label>
                            </div>
                            <div class="product-action-vertical">
                                <button style="cursor:pointer;" onclick="addToWishlist(event,@product.Id)" class="btn-product-icon btn-wishlist" title="Add to wishlist">
                                    <i class="d-icon-heart"></i>
                                </button>
                            </div>
                            <div class="product-action">
                                <a asp-controller="shop" asp-action="quickview" asp-route-slug="@product.Slug" class="btn-product btn-quickview" title="Quick View">@ShopPage.Quickview</a>
                            </div>
                        </figure>
                        <div class="product-details">
                            <div class="product-cat">
                                <a asp-action="details" asp-controller="shop" asp-route-slug="@product.Slug">@product.Category.Name</a>
                            </div>
                            <h3 class="product-name">
                                <a asp-action="details" asp-controller="shop" asp-route-slug="@product.Slug">@product.Name</a>
                            </h3>
                            <div class="product-price">
                                <ins class="new-price">@product.Price&#8380;</ins><del class="old-price">@(product.OldPrice != null ? product.OldPrice + "₼" : null)</del>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        <div class="container mt-6 appear-animate">
            <div class="service-list">
                <div class="owl-carousel owl-theme row cols-lg-3 cols-sm-2 cols-1" data-owl-options="{
                                    'items': 3,
                                    'nav': false,
                                    'dots': false,
                                    'loop': true,
                                    'autoplay': false,
                                    'autoplayTimeout': 5000,
                                    'responsive': {
                                        '0': {
                                            'items': 1
                                        },
                                        '576': {
                                            'items': 2
                                        },
                                        '768': {
                                            'items': 3,
                                            'loop': false
                                        }
                                    }
                                }">
                    <div class="icon-box icon-box-side icon-box1 appear-animate" data-animation-options="{
                                        'name': 'fadeInRightShorter',
                                        'delay': '.3s'
                                    }">
                        <i class="icon-box-icon d-icon-truck"></i>
                        <div class="icon-box-content">
                            <h4 class="icon-box-title text-capitalize ls-normal lh-1">
                                @ShopPage.Local_delivery_available_
                            </h4>
                        </div>
                    </div>

                    <div class="icon-box icon-box-side icon-box2 appear-animate" data-animation-options="{
                                        'name': 'fadeInRightShorter',
                                        'delay': '.4s'
                                    }">
                        <i class="icon-box-icon d-icon-service"></i>
                        <div class="icon-box-content">
                            <h4 class="icon-box-title text-capitalize ls-normal lh-1">
                                @HomePage.Customer_Support_24_7
                            </h4>
                        </div>
                    </div>

                    <div class="icon-box icon-box-side icon-box3 appear-animate" data-animation-options="{
                                        'name': 'fadeInRightShorter',
                                        'delay': '.5s'
                                    }">
                        <i class="icon-box-icon d-icon-secure"></i>
                        <div class="icon-box-content">
                            <h4 class="icon-box-title text-capitalize ls-normal lh-1">
                                @HomePage._100__Secure_Payment
                            </h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
@section js{
    <script>
        function determineAddOrNotify(item) {
            $('.product-size').css('display', 'none');
            $('.product-size .product-variations a.active').removeClass('active');
            if (!$(item.currentTarget).hasClass('active')) {
                let colorId = $(item.currentTarget).data("color-id");
                $('.product-size').each(function (index, item) {
                    if ($(item).data('entity-id') == colorId)
                        $(item).css('display', 'flex');
                    let size = $('.product-size .product-variations a.size');

                    size.click(function (item) {
                        if ($(item.currentTarget).hasClass('active')) {
                            if ($(item.currentTarget).hasClass('soldOut')) {
                                $('#btnCart').css("display", "none");
                                $('#btnNotify').css("display", "flex");
                                $('#btnNotify').removeAttr('disabled');
                            }
                            else {
                                $('#btnNotify').css("display", "none");
                                $('#btnCart').css("display", "flex");
                                $('#btnCart').removeAttr('disabled');
                            }
                        }
                    })
                });
            }
            else {
                $('.product-size').css('display', 'none');
            }
        }
        function addToNotify(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            if (@userId == 0) {
                toastr.warning("Bu funksiyadan istifadə etmək üçün zəhmət olmasa giriş edin!", "Uğursuz");
                return;
            }
            let data = $(ev.currentTarget).data();
            let colors = document.querySelectorAll('.color');
            let color;
            let size;
            for (var i = 0; i < colors.length; i++) {
                if (colors[i].getAttribute('class') == 'color active') {
                    color = $(colors[i]).data();
                }
            }
            let sizes = document.querySelectorAll('.size');
            for (var i = 0; i < sizes.length; i++) {
                if (sizes[i].getAttribute('class') == 'size soldOut active') {
                    size = $(sizes[i]).data();
                }
            }
            let activeSpecs = $('.product-variations a.active');
            if (color == undefined) {
                toastr.warning("Məhsulun rəngini seçin zəhmət olmasa!", "Uğursuz");
                return;
            }
            else if (size == undefined) {
                toastr.warning("Məhsulun ölçüsünü seçin zəhmət olmasa!", "Uğursuz");
                return;
            }
            else if (activeSpecs.length != 2) {
                toastr.warning("Məhsulun rəngini və ölçüsünü düzgün seçin zəhmət olmasa!", "Uğursuz");
                return;
            }
            addToNotification(data.itemId, color.colorId, size.sizeId);
        }
        function addToNotification(cardId, cardColor, cardSize) {
            if (@userId == 0) {
                toastr.warning("Bu funksiyadan istifadə etmək üçün zəhmət olmasa giriş edin!", "Uğursuz");
                return;
            }
            else {
                let items = [];
                items.push(cardId, cardColor, cardSize,@User.GetUserId());
                console.log(items);
                $.ajax({
                    url: `@Url.Action("Notification","Shop")`,
                    type: 'post',
                    contentType: 'application/json',
                    data: JSON.stringify(items),
                    success: function (response) {
                        if (response.error == true) {
                            toastr.error(response.message, "Uğursuz!");
                            return;
                        }
                        toastr.success("Bildirişlərə uğurla əlavə edildi", response.message)
                    },
                    error: function (response) {
                        toastr["error"]("Uğursuz!", response.message)
                    }
                })
            }
        }

        function specificationsDetermine(e) {
            console.log("salam")
            $('.product-size').css('display', 'none');
            $('.product-size .product-variations a.active').removeClass('active');
            if (!$(e.currentTarget).hasClass('active')) {

                let colorId = $(e.currentTarget).data("color-id");
                $('.product-size').each(function (index, item) {
                    if ($(item).data('entity-id') == colorId)
                        $(item).css('display', 'flex');
                    let size = $('.product-size .product-variations a.size');
                    console.log('sakanaaaa')
                    console.log(size)
                    size.click(function (item) {
                        if ($(item.currentTarget).hasClass('active')) {
                            $('#btnCart').removeAttr('disabled');
                        }
                    })
                });
            }
            else {
                $('.product-size').css('display', 'none');
            }
            determineAddOrNotify(e);
        }

        function addToWishlist(ev, productId) {
            ev.preventDefault();
            ev.stopPropagation();
            addToCookie(productId);

            console.log(readFromCookie())
        }
        function readFromCookie() {
            return ($.cookie('cardsForWishlist') || '').split(',');
        }
        function addToCookie(cardId) {
            let items = readFromCookie();
            let length = items.filter(item => item == cardId).length;
            if (length > 0) {
                toastr.warning("Bu məhsulu artıq seçilmişlərə əlavə etmisiniz!", "Uğursuz");
                return;
            }
            items.push(cardId);
            $.cookie('cardsForWishlist', items.toString(), { expires: 7, path: '/' });
            $.ajax({
                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    toastr.success("Uğurla seçilmişlərə əlavə edildi", response.message)
                },
                error: function (response) {
                    toastr["error"]("Uğursuz", "Əlavə edilmədi")
                }
            })
        }


        function addToCart(ev) {
            ev.preventDefault();
            ev.stopPropagation();
            let data = $(ev.currentTarget).data();
            let qty = $(ev.currentTarget).prev().find('#qty').val();
            let colors = document.querySelectorAll('.color');
            let color;
            let size;
            for (var i = 0; i < colors.length; i++) {
                if (colors[i].getAttribute('class') == 'color active') {
                    color = $(colors[i]).data();
                }
            }
            let sizes = document.querySelectorAll('.size');
            for (var i = 0; i < sizes.length; i++) {
                if (sizes[i].getAttribute('class') == 'size active') {
                    size = $(sizes[i]).data();
                }
            }
            let activeSpecs = $('.product-variations a.active');
            if (qty <= 0) {
                toastr.warning("Miqdarı düzgün qeyd edin!", "Uğursuz");
                return;
            }
            else if (color == undefined) {
                toastr.warning("Məhsulun rəngini seçin zəhmət olmasa!", "Uğursuz");
                return;
            }
            else if (size == undefined) {
                toastr.warning("Məhsulun ölçüsünü seçin zəhmət olmasa!", "Uğursuz");
                return;
            }
            else if (activeSpecs.length != 2) {
                toastr.warning("Məhsulun rəngini və ölçüsünü düzgün seçin zəhmət olmasa!", "Uğursuz");
                return;
            }
            console.log(data.itemId);
            console.log(qty);
            console.log(color.colorId);
            console.log(size.sizeId);
            addToBasket(data.itemId, color.colorId, size.sizeId, qty, ev);
        }

        function addToBasket(cardId, cardColor, cardSize, cardQty, ev) {
            let colorAndSize = `${cardId}-${cardColor}-${cardSize}`;
            console.log(colorAndSize);
            let items = readFromBasket();
            let colors = readFromBasketColor();
            let sizes = readFromBasketSize();
            let qtys = readFromBasketQty();
            let colorsAndSizes = readFromBasketColorAndSize();
            let length = colorsAndSizes.filter(item => item == colorAndSize).length;

            if (length > 0) {
                toastr.warning("Bu məhsulu artıq əlavə etmisiniz!", "Uğursuz");
                return;
            }
            items.push(cardId);
            colors.push(cardColor);
            sizes.push(cardSize);
            qtys.push(cardQty);
            colorsAndSizes.push(colorAndSize);
            $.cookie('cards', items.toString(), { expires: 7, path: '/' });
            $.cookie('colors', colors.toString(), { expires: 7, path: '/' });
            $.cookie('sizes', sizes.toString(), { expires: 7, path: '/' });
            $.cookie('qtys', qtys.toString(), { expires: 7, path: '/' });
            $.cookie('colorAndSizes', colorsAndSizes.toString(), { expires: 7, path: '/' });
            ev.preventDefault();
            var t = $(ev.currentTarget).closest(".product");
            let name = t.find(".product-name").text();
            let link = `/shop/details/${cardId}`;
            let imageSrc = t.find("figure.main img").attr("src");
            let price = parseFloat(t.find("div.product-price ins.new-price").html().replace(",","."));
            console.log(price);
            let count = t.find(".quantity").length > 0 ? t.find(".quantity").val() : 1;
            let miniBasket = $('#basketProducts');
            let cartActionContainer = $('div.cart-action');
            let cartTotalContainer = $('div.cart-total');
            let totalPrice = 0;
            let subTotalPrice = $('div.cart-total span.price');
            if (subTotalPrice.length == 0) {
                let productsCart = $('div#basketProducts div.product-cart');
                if (productsCart.length == 0) {
                    totalPrice = price * count;
                }
            }
            else {
                let previousTotalPrice = parseFloat(subTotalPrice.text());
                totalPrice = previousTotalPrice + (price * count);
                subTotalPrice.text(totalPrice.toFixed(2));
            }

            console.log(totalPrice);
            //let prices = $('div.cart-total span.price');
            //let subTotalPriceExistThisProduct = 0;
            //for (var i = 0; i < prices.length; i++) {
            //    subTotalPriceExistThisProduct += prices[i];
            //}
            //let subTotalPrice = subTotalPriceExistThisProduct + price * count;

            /**/
            let productContainer = `<div data-specification="${cardId}-${cardColor}-${cardSize}" class="product product-cart">
                                            <figure class="product-media1">
                                                <a href="${link}">
                                                            <img src="${imageSrc}" alt="${name}" width="80"
                                                                 height="88" />
                                                </a>
                                                <button onclick="removeEntity1(${cardId},${cardColor},${cardSize},${cardQty},event)" class="btn btn-link btn-close">
                                                    <i class="fas fa-times"></i><span class="sr-only">@ShopPage.Close</span>
                                                </button>
                                            </figure>
                                            <div class="product-detail">
                                                <a href="${link}" class="product-name">${name}</a>
                                                <div class="price-box">
                                                        <span class="product-quantity">${count}</span>
                                                        <span class="product-price">${price}</span>
                                                </div>
                                            </div>
                                        </div>
`

            let cartTotal = `<label>@AccountPage.Total:</label>
                                <span class="price">${totalPrice}</span><span>&#8380;</span>`
            let cartAction = `<a href="/shop/basket" class="btn btn-dark btn-link">@ShopPage.Go_to_Basket</a>`

            $.ajax({

                success: function (response) {
                    if (response.error == true) {
                        toastr.error(response.message, "Error!");
                        return;
                    }
                    if (readFromBasket().length <= 2) {
                        cartActionContainer.append(cartAction);
                        cartTotalContainer.append(cartTotal);
                        $("div.dropdown-box div.d-flex").remove();
                    }
                    toastr.success("Səbətə uğurla əlavə edildi", response.message)
                    showCardCount();
                    miniBasket.append(productContainer);


                },
                error: function (response) {
                    toastr["error"]("Uğursuz", "Əlavə edilmədi")
                }
            })
        }
    </script>
}